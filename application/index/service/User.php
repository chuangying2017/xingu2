<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/2/1 0001
 * Time: 下午 2:25
 */

namespace app\index\service;


use think\Db;
use think\Exception;
use think\Log;
use think\Model;
//服务class 主要做一些代码重构
class User extends Model
{
    protected  $data_base;//后台设置参数
    protected  $table_data;//数据表
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->data_base = database(2);
        $this->table_data['member'] = Db::name('member');//会员表
        $this->table_data['bonus'] = Db::name('bonus');//奖金表
        $this->table_data['orders'] = Db::name('orders');//订单表
    }

    //计算迭代奖金
    public function iterator_money($recommend,$each_num_money){
            try{
                $recommend_id = 0;$recommend_one = $recommend;//$recommend_one推荐人id
                for ($j=1;$j<$this->data_base['iteration_of']+1;$j++){//计算迭代10层级关系
                    if($recommend_id >= $j){//$recommend_id这个等于2的时候计算第二次
                        switch ($recommend_id){
                            case 2://计算二代奖金
                                $two_bonus = $each_num_money * ($this->data_base['recommend_tow'] / 100);//计算二代的奖励
                                $two_level_member=$this->table_data['member']->where('id',$one_member_data['recommend'])->find();//查看上一级推荐人
                                if($two_level_member){//为true就进来查询有无购买记录
                                    $order_boolean = $this->table_data['orders']->where('price','egt','100')->where(['uid'=>$one_member_data['recommend']])->where('type','in','2,3')->count();
                                    if($order_boolean){
                                        $this->table_data['member']->where('id',$two_level_member['id'])->setInc('bonus',$two_bonus);//添加二级推荐奖励
                                        $this->table_data['bonus']->insert([
                                            'uid'=>$two_level_member['id'],'type'=>'2','create_date'=>time(),'money'=>$two_bonus,'order_id'=>$order_id
                                        ]);//生成一条奖金记录
                                    }
                                    $recommend_id++;
                                }else{//否者不为真就是停止
                                    return ['status'=>4,'msg'=>'复投成功','url'=>\url('index/index/index')];
                                }
                                break;
                            case 3://计算三代奖金
                                $three_bonus = $each_num_money * ($this->data_base['recommend_three'] / 100);
                                $three_level_member=$this->table_data['member']->where('id',$two_level_member['recommend'])->find();
                                if($three_level_member){
                                    $order_boolean = $this->table_data['orders']->where('price','egt','100')->where(['uid'=>$two_level_member['recommend']])->where('type','in','2,3')->count();
                                    if($order_boolean){
                                        $this->table_data['member']->where('id',$three_level_member['id'])->setInc('bonus',$three_bonus);//添加三级级推荐奖励
                                        $this->table_data['bonus']->insert([
                                            'uid'=>$three_level_member['id'],'type'=>'3','create_date'=>time(),'money'=>$three_bonus,'order_id'=>$order_id
                                        ]);//生成一条奖金记录
                                    }
                                    $recommend_id++;
                                    $recommend_one = $three_level_member['recommend'];//拿到上一级的id
                                }else{
                                    return ['status'=>4,'msg'=>'复投成功','url'=>\url('index/index/index')];
                                }
                                break;
                            default://剩余全部计算奖金
                                $total_bonus = $each_num_money * ($this->data_base['iteration_percentage'] / 100);
                                $all_member_data = $this->table_data['member']->where('id',$recommend_one)->find();//查询一下这个id有没有
                                if($all_member_data){//查询上一级有无推荐人
                                    $order_boolean = $this->table_data['orders']->where('price','egt','100')->where(['uid'=>$recommend_one])->where('type','in','2,3')->count();
                                    if($order_boolean){//查询一下上一级有无购买超过100元的金额
                                        $this->table_data['member']->where('id',$all_member_data['id'])->setInc('bonus',$total_bonus);//添加三级级推荐奖励
                                        $this->table_data['bonus']->insert([
                                            'uid'=>$all_member_data['id'],'type'=>$recommend_id,'create_date'=>time(),'money'=>$total_bonus,'order_id'=>$order_id
                                        ]);//生成一条奖金记录
                                    }
                                    $recommend_one = $all_member_data['recommend'];
                                    $recommend_id++;
                                }else{
                                    return ['status'=>4,'msg'=>'复投成功','url'=>\url('index/index/index')];
                                }
                                break;
                        }
                    }else{
                        if($recommend_id > 0){
                            break;
                        }else{//大于0，第二次循环计算推荐奖励,第一次是0，计算第一次的推荐奖励
                            $one_member_data=$this->table_data['member']->where('id',$recommend_one)->find();//查询上一级
                            $order_boolean = $this->table_data['orders']->where('price','egt','100')->where(['uid'=>$recommend_one,'type'=>array('in','2,3')])->count();
                            //计算购买产品的一代奖金
                            if($one_member_data && $order_boolean){
                                $one_bonus = $each_num_money * ($this->data_base['recommend_one'] / 100);
                                $this->table_data['member']->where('id',$one_member_data['id'])->setInc('bonus',$one_bonus);//加到会员奖金
                                $this->table_data['bonus']->insert([
                                    'uid'=>$one_member_data['id'],'type'=>'1','create_date'=>time(),'money'=>$one_bonus,'order_id'=>$order_id
                                ]);//生成一条奖金记录
                                $recommend_id = 2;//循环第二次
                            }elseif ($one_member_data){
                                $recommend_id = 2;
                            }else{
                                return ['status'=>4,'msg'=>'复投成功','url'=>\url('index/index/index')];
                            }
                        }
                    }
                }
            }catch (Exception $exception){
                Log::init([
                    'type'=>'File','path'=>APP_PATH.'log_iterator'
                ]);
                Log::info($exception->getMessage());
            }
    }
}